name: CI/CD for URL Shortener
on: [push, pull_request]
jobs:
    build:
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:8
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: url_shortener
                    MYSQL_ROOT_HOST: '%'
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping -h localhost --silent" --health-interval=10s --health-timeout=5s --health-retries=10
        env:
            SPRING_PROFILES_ACTIVE: dev
            DB_HOST: 127.0.0.1
            DB_PORT: 3306
            DB_NAME: url_shortener
            DB_USERNAME: root
            DB_PASSWORD: root
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '21'
            - name: Wait for MySQL to be ready
              run: |
                  echo "Waiting for MySQL to start..."
                  for i in {1..60}; do
                    if mysqladmin ping -h 127.0.0.1 -u root -proot --silent; then
                      echo "MySQL is ready!"
                      exit 0
                    fi
                    echo "Waiting for MySQL ($i/60)..."
                    sleep 2
                  done
                  echo "MySQL did not start in time!"
                  docker ps
                  docker logs $(docker ps -q --filter "ancestor=mysql:8")  # Print logs for debugging
                  exit 1
            - name: Verify MySQL Connection
              run: |
                  mysql -h 127.0.0.1 -u root -p'root' -e "SHOW DATABASES;"
            - name: Build with Maven
              run: mvn clean package
            - name: Run Tests
              run: mvn test
            - name: Build Docker Image
              run: docker build -t url-shortener .
            - name: Push Docker Image to Docker Hub
              run: |
                  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                  docker tag url-shortener ${{ secrets.DOCKER_USERNAME }}/url-shortener:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/url-shortener:latest
